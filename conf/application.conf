# Copyright 2023 HM Revenue & Customs
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# This is the main configuration file for the application.
# ~~~~~
include "backend.conf"

appName = upscan-notify

play.modules.enabled += "uk.gov.hmrc.play.bootstrap.HttpClientV2Module"
play.modules.enabled += "uk.gov.hmrc.upscannotify.NotifyModule"
play.modules.enabled += "uk.gov.hmrc.upscannotify.connector.aws.AWSClientModule"

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# !!!WARNING!!! DO NOT CHANGE THIS ROUTER
play.http.router = prod.Routes

aws {
  accessKeyId     = "ENTER YOUR KEY"
  secretAccessKey = "ENYER YOUR SECRET"
  accessKeyId     = ${?AWS_ACCESS_KEY_ID}
  secretAccessKey = ${?AWS_SECRET_ACCESS_KEY}
  sessionToken    = ${?AWS_SESSION_TOKEN}
  s3 {
    region = "eu-west-2"
    uploadLifetime = 7.days
  }
  sqs {
    queue.outbound.successful =  "https://sqs.eu-west-2.amazonaws.com/063874132475/fus-inbound-file-queue-development"
    queue.outbound.quarantine =  "https://sqs.eu-west-2.amazonaws.com/063874132475/fus-quarantined-file-queue-development"
    retry.interval = 20.seconds
  }
}

default.aws.s3.urlExpirationPeriod = 1.day

successful {
  processingBatchSize = 10
  waitTime            = 20.seconds
}
quarantine {
  processingBatchSize = 10
  waitTime            = 20.seconds
}

upscan.endToEndProcessing.threshold = 10.seconds

# Microservice specific config
consuming-services {
  consuming-service-123 {
    aws {
      s3 {
        urlExpirationPeriod = 1.day
      }
    }
  }
}
